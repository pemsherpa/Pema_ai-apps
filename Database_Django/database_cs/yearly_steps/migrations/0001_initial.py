# Generated by Django 5.1.4 on 2024-12-14 17:27

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Companys',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_id', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Providers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, unique=True)),
                ('renewable_percent', models.FloatField()),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('website_link', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Total_CO2e',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comp', models.IntegerField()),
                ('scope', models.IntegerField()),
                ('subcategory', models.FloatField()),
                ('year', models.IntegerField()),
                ('total_co2e', models.FloatField()),
                ('gas1', models.FloatField()),
                ('gas2', models.FloatField()),
                ('gas3', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Plans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_name', models.CharField(max_length=100)),
                ('carbon_savings', models.FloatField()),
                ('cost_savings', models.FloatField()),
                ('peak_cost', models.FloatField()),
                ('off_peak_cost', models.FloatField()),
                ('total_cost', models.FloatField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='yearly_steps.providers')),
            ],
        ),
        migrations.CreateModel(
            name='ScopeSteps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('quarter', models.IntegerField()),
                ('scope_type', models.IntegerField()),
                ('description', models.TextField()),
                ('difficulty', models.IntegerField()),
                ('cost_savings', models.FloatField()),
                ('emissions_savings', models.FloatField()),
                ('total_cost', models.FloatField()),
                ('total_emissions', models.FloatField()),
                ('transition_percentage', models.IntegerField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yearly_steps.companys', to_field='company_id')),
            ],
        ),
        migrations.CreateModel(
            name='Recommendations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, null=True)),
                ('provider_name', models.TextField(blank=True, null=True)),
                ('company', models.TextField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('website_link', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('plan_name', models.TextField(blank=True, null=True)),
                ('carbon_savings', models.FloatField(blank=True, null=True)),
                ('cost_savings', models.FloatField(blank=True, null=True)),
                ('peak_cost', models.FloatField(blank=True, null=True)),
                ('off_peak_cost', models.FloatField(blank=True, null=True)),
                ('total_cost', models.FloatField(blank=True, null=True)),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='yearly_steps.plans')),
                ('scope_step', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='yearly_steps.scopesteps')),
            ],
        ),
        migrations.CreateModel(
            name='ScopeTotals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope_1_total', models.FloatField()),
                ('scope_2_total', models.FloatField()),
                ('scope_3_total', models.FloatField()),
                ('scope_total', models.FloatField()),
                ('scope_1_target', models.FloatField()),
                ('scope_2_target', models.FloatField()),
                ('scope_3_target', models.FloatField()),
                ('target_timeframe', models.IntegerField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yearly_steps.companys', to_field='company_id')),
            ],
        ),
        migrations.CreateModel(
            name='ShoppingCartContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_id', models.IntegerField(default=1)),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='yearly_steps.plans')),
                ('providers', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='yearly_steps.providers')),
            ],
            options={
                'db_table': 'shopping_cart_content',
                'managed': True,
                'unique_together': {('company_id', 'providers')},
            },
        ),
    ]
